<?xml version="1.0"?>
<project name="Feedback" default="jar">
  <property name="jar.file" value="Feedback.jar"/>
  <property name="src.dir" value="src"/>
  <property name="build.dir" value="build"/>
  <property name="doc.dir" value="doc"/>
  <property name="build.classes.dir" value="${build.dir}/classes"/>
  <taskdef resource="checkstyletask.properties"/>
  <taskdef resource="proguard/ant/task.properties"/>

  <target name="init">
    <mkdir dir="${build.classes.dir}"/>
  </target>

  <target name="compile" depends="init"
	  description="Compile all source files.">
    <javac srcdir="${src.dir}" destdir="${build.classes.dir}"
	   optimize="on" debug="on" deprecation="on"
	   includeantruntime="false">
      <compilerarg value="-Xlint"/>
    </javac>
    <copy todir="${build.classes.dir}">
      <fileset dir="${src.dir}" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="jar" depends="compile"
	  description="Generate the jarfile distributable.">
    <jar destfile="${jar.file}" basedir="${build.classes.dir}">
      <manifest>
        <attribute name="Main-Class"
		   value="feedback.Feedback"/>
      </manifest>
    </jar>
  </target>

  <target name="run" depends="jar" description="Run the application.">
    <java jar="${jar.file}" fork="true"/>
  </target>

  <target name="clean" description="Delete all generated files.">
    <delete dir="${build.dir}"/>
    <delete file="${jar.file}"/>
  </target>

  <target name="javadoc" description="Generate Javadoc HTML.">
    <javadoc destdir="${doc.dir}/javadoc">
      <fileset dir="${src.dir}" includes="**/*.java" />
    </javadoc>
  </target>

  <target name="format" description="Run the indenter on all source files.">
    <apply executable="astyle">
      <arg value="--mode=java"/>
      <arg value="--suffix=none"/>
      <fileset dir="${src.dir}" includes="**/*.java"/>
    </apply>
  </target>

  <target name="check">
    <checkstyle config="doc/sun_checks.xml">
      <fileset dir="src" includes="**/*.java"/>
    </checkstyle>
  </target>

  <target name="optimize" depends="jar">
    <proguard>
      <libraryjar path="${java.home}/lib/rt.jar"/>
      <injar file="${jar.file}"/>
      <outjar file="out.${jar.file}"/>
      <keepclasseswithmembers access="public" type="class">
	<method access="public" type="void" name="main"
		parameters="java.lang.String[]"/>
      </keepclasseswithmembers>
    </proguard>
    <delete file="${jar.file}"/>
    <move file="out.${jar.file}" tofile="${jar.file}"/>
  </target>
</project>
